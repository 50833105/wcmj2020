var tipuesearch = {"pages":[{"title":"About","text":"CMSimfly 內容管理網誌 課程倉儲: https://github.com/chiamingyen/cmsimfly 內容管理: https://chiamingyen.github.io/cmsimfly/ 課程投影片: https://chiamingyen.github.io/cmsimfly/reveal 課程網誌: https://chiamingyen.github.io/cmsimfly/blog","tags":"misc","url":"./pages/about/"},{"title":"2020 WCMJ W10 課程簡介","text":"以SSH維護倉儲 以SSH維護倉儲 1.下載 PuTTY 2.利用 y:\\portablegit\\bin\\sh.exe 進入 shell 命令環境後, 以 ssh-keygen -t rsa -b 4096 -C \"使用者學號\" 在 /y/home/.ssh 目錄下建立 id_rsa 與 id_rsa.pub 等 private key 與 public key 之後以 SciTE 開啟 id_rsa.pub 後, 將此 public key 的內容, 以新增添加到 Github.com 帳號下 personal settings -> SSH and GPG keys 頁面下. 3.接下來要利用 puttygen.exe 將 id_rsa 轉為 Putty 可以解讀的 .ppk 格式, 並修改隨身系統的啟動批次檔案, 指定利用 putty 目錄下的 plink 執行 git 指令的網路代理設定. 修改啟動的 start.bat 加入下列設定: set GIT_HOME=%Disk%:\\portablegit\\bin\\ set GIT_SSH=%Disk%:\\putty\\plink.exe 4.利用 puttygen.exe 載入第二步驟所建立的 private key, 也就是 id_rsa. 開啟 puttygen 之後, 以右下方的 load 載入 id_rsa, 成功載入後, 利用 save private key 按鈕, 將已經轉為 putty 格式的 .ppk 存檔. 此一 .ppk 檔案必須在設定 putty 中 github.com session 時, 在 Connection->SSH->Auth 項目下, 將轉檔後的 .ppk 指向 private key file for authentication 欄位. 並在 Connection->Proxy 項目下, 指定 Proxy type: HTTP, 並將 IPv6 代理主機設為 ::53 或 ::42 埠號設為 3128. 5.之後確定 home 下的 .ssh 目錄中的 config 設定檔案為: # no proxy at home #ProxyCommand y:/PortableGit/mingw64/bin/connect.exe -H proxy.mde.nfu.edu.tw:3128 %h %p # set git_ssh=y:/putty/plink.exe with auth under putty github.com session setup ProxyCommand y:/putty/plink.exe github.com %h %p Host github.com User git Port 22 Hostname github.com # for connect . exe need openssh key format # IdentityFile \"y:\\home\\.ssh\\id_rsa_mdecourse\" # for plink . exe need rsa key format but set under putty github . com session # plink . exe do not need the following setting # IdentityFile \"y:\\home\\.ssh\\mdecourse_putty_private.ppk\" TCPKeepAlive yes IdentitiesOnly yes 6.最後再將 wcmj2020 倉儲中 .git 目錄下的 config 檔案中的連線協定, 由 https 改為採 ssh 連線: 範例如下: [ core ] repositoryformatversion = 0 filemode = false bare = false logallrefupdates = true symlinks = false ignorecase = true [submodule] active = . [remote \"origin\"] #url = https://github.com/mdecourse/wcmj2020.git (mdecourse為使用者名稱，請自行更改) url = git@github.com:mdecourse/wcmj2020.git (mdecourse為使用者名稱，請自行更改) fetch = +refs/heads/ :refs/remotes/origin/ [branch \"master\"] remote = origin merge = refs/heads/master [submodule \"cmsimde\"] url = https://github.com/mdecourse/cmsimde.git 之後就可以透過近端的 .ppk private key 與 Github.com 上的 public key 對應, 無需輸入帳號密碼就可以進行 git push","tags":"W10","url":"./2020-wcmj-w10-summary.html"},{"title":"2020 WCMJ W9 課程簡介","text":"電腦軟硬體簡介 網路架構與設定的簡介 電腦軟硬體簡介 硬體：可觸摸到的，例如:鍵盤、滑鼠 主機:包含主機板、記憶體、顯示卡、插孔等等 軟體：不可觸摸到的，例如:office系統 作業系統；Windows(記事本、接龍、踩地雷) 應用軟體、商用軟體、共享軟體(免費，但有限時或功能限制)、綠色軟體(免費免安裝的軟體) 網路架構與設定的簡介 網際網路:每台電腦都有IP位置(編號)。 實體建置:集線器或網路交換器。 網路設定:由設定>乙太網路或WIFI>網路和共用中心>內容>調整IPv4之IP及DNS 設定Proxy(視情況所需，如果在IPv6下要使用IPv4，即可使用Proxy)","tags":"W9","url":"./2020-wcmj-w9-summary.html"},{"title":"2020 WCMJ W11 課程簡介","text":"說明如還利用 Leo Editor 管理 CMSiMDE 網際網路內容管理系統中 Pelican 網誌。其中有共用、近端與遠端等三個設定檔案的修改，以及兩個用程式按鈕轉檔的使用。 Leo Editor 基本用法 首先在隨身程式系統的命令列中，以leo啟動 Leo Editor ，然後開啟 wcmj2020 倉儲config目錄中的pelican.leo檔案。 由於 Leo Editor 是一個大綱管理系統, 淡黃色區域是大綱節點區, 淡紅色區是與各大綱對應的內文區, 而淡藍色則是 Log 輸出區 新增節點的指令: ctrl + i, 表示要 insert 一個新的節點 向右移動節點的方法: ctrl + r, 表示要將節點往 right (右) 移動 向左移動節點的方法: ctrl + l, 表示要將節點往 left (左) 移動 向上移動節點的方法: ctrl + u, 表示要將節點往 up (上) 移動 向下移動節點的方法: ctrl + d, 表示要將節點往 down (下) 移動 三個檔案設定的修改 在共用檔案中，修改AUTHOR = '使用者名稱或學號'以及SITENAME = '自己想使用的名稱' 在遠端檔案中，修改SITEURL = 'https://學號.github.io/wcmj2020/blog' 近端檔案目前不用修改","tags":"W11","url":"./2020-wcmj-w11-summary.html"}]};