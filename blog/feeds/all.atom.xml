<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>wcmj2020 網際內容管理課程</title><link href="./" rel="alternate"></link><link href=".%5Cfeeds/all.atom.xml" rel="self"></link><id>./</id><updated>2020-05-22T14:30:00+08:00</updated><entry><title>2020 WCMJ W10 課程簡介</title><link href=".%5C2020-wcmj-w10-summary.html" rel="alternate"></link><published>2020-05-22T14:30:00+08:00</published><updated>2020-05-22T14:30:00+08:00</updated><author><name>508331050</name></author><id>tag:None,2020-05-22:.\2020-wcmj-w10-summary.html</id><summary type="html">&lt;p&gt;以SSH維護倉儲&lt;/p&gt;
</summary><content type="html">&lt;p&gt;以SSH維護倉儲&lt;/p&gt;


&lt;h2&gt;以SSH維護倉儲&lt;/h2&gt;
&lt;p&gt;1.下載&lt;a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html"&gt;PuTTY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2.利用 y:\portablegit\bin\sh.exe 進入 shell 命令環境後, 以 &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;ssh-keygen -t rsa -b 4096 -C &amp;quot;使用者學號&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在 /y/home/.ssh 目錄下建立 id_rsa 與 id_rsa.pub 等 private key 與 public key&lt;/p&gt;
&lt;p&gt;之後以 SciTE 開啟 id_rsa.pub 後, 將此 public key 的內容, 以新增添加到 Github.com 帳號下 personal settings -&amp;gt; SSH and GPG keys 頁面下.&lt;/p&gt;
&lt;p&gt;3.接下來要利用 puttygen.exe 將 id_rsa 轉為 Putty 可以解讀的 .ppk 格式, 並修改隨身系統的啟動批次檔案, 指定利用 putty 目錄下的 plink 執行 git 指令的網路代理設定.
    修改啟動的 start.bat 加入下列設定:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;set GIT_HOME=%Disk%:\portablegit\bin\&lt;/span&gt;
&lt;span class="err"&gt;set GIT_SSH=%Disk%:\putty\plink.exe&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;4.利用 puttygen.exe 載入第二步驟所建立的 private key, 也就是 id_rsa.&lt;/p&gt;
&lt;p&gt;開啟 puttygen 之後, 以右下方的 load 載入 id_rsa, 成功載入後, 利用 save private key 按鈕, 將已經轉為 putty 格式的 .ppk 存檔. 此一 .ppk 檔案必須在設定 putty 中 github.com session 時, 在 Connection-&amp;gt;SSH-&amp;gt;Auth 項目下, 將轉檔後的 .ppk 指向 private key file for authentication 欄位. &lt;/p&gt;
&lt;p&gt;並在 Connection-&amp;gt;Proxy 項目下, 指定 Proxy type: HTTP, 並將 IPv6 代理主機設為 ::53 或 ::42 埠號設為 3128.&lt;/p&gt;
&lt;p&gt;5.之後確定 home 下的 .ssh 目錄中的 config 設定檔案為:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt; # no proxy at home&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;#ProxyCommand y:/PortableGit/mingw64/bin/connect.exe -H proxy.mde.nfu.edu.tw:3128 %h %p
 # set git_ssh=y:/putty/plink.exe with auth under putty github.com session setup
 ProxyCommand y:/putty/plink.exe github.com %h %p&lt;/p&gt;
&lt;p&gt;Host github.com
     User git
     Port 22
     Hostname github.com&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt; &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="k"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exe&lt;/span&gt; &lt;span class="n"&gt;need&lt;/span&gt; &lt;span class="n"&gt;openssh&lt;/span&gt; &lt;span class="k"&gt;key&lt;/span&gt; &lt;span class="n"&gt;format&lt;/span&gt;
 &lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;IdentityFile&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;y:\home\.ssh\id_rsa_mdecourse&amp;quot;&lt;/span&gt;
 &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;plink&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exe&lt;/span&gt; &lt;span class="n"&gt;need&lt;/span&gt; &lt;span class="n"&gt;rsa&lt;/span&gt; &lt;span class="k"&gt;key&lt;/span&gt; &lt;span class="n"&gt;format&lt;/span&gt; &lt;span class="n"&gt;but&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="k"&gt;under&lt;/span&gt; &lt;span class="n"&gt;putty&lt;/span&gt; &lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt; &lt;span class="k"&gt;session&lt;/span&gt;
 &lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="n"&gt;plink&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exe&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="n"&gt;need&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;following&lt;/span&gt; &lt;span class="n"&gt;setting&lt;/span&gt;
 &lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;IdentityFile&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;y:\home\.ssh\mdecourse_putty_private.ppk&amp;quot;&lt;/span&gt;

 &lt;span class="n"&gt;TCPKeepAlive&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
 &lt;span class="n"&gt;IdentitiesOnly&lt;/span&gt; &lt;span class="n"&gt;yes&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;6.最後再將 wcmj2020 倉儲中 .git 目錄下的 config 檔案中的連線協定, 由 https 改為採 ssh 連線: 範例如下:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;core&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;repositoryformatversion&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;filemode&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bare&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;logallrefupdates&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;symlinks&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;false&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ignorecase&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;true&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;[submodule]
     active = .
 [remote "origin"]
     #url = https://github.com/mdecourse/wcmj2020.git (mdecourse為使用者名稱，請自行更改)
     url = git@github.com:mdecourse/wcmj2020.git (mdecourse為使用者名稱，請自行更改)
     fetch = +refs/heads/&lt;em&gt;:refs/remotes/origin/&lt;/em&gt;
 [branch "master"]
     remote = origin
     merge = refs/heads/master
 [submodule "cmsimde"]
     url = https://github.com/mdecourse/cmsimde.git &lt;/p&gt;
&lt;p&gt;之後就可以透過近端的 .ppk private key 與 Github.com 上的 public key 對應, 無需輸入帳號密碼就可以進行 git push&lt;/p&gt;</content><category term="W10"></category><category term="2020WCMJ2020W10"></category></entry><entry><title>2020 WCMJ W9 課程簡介</title><link href=".%5C2020-wcmj-w9-summary.html" rel="alternate"></link><published>2020-05-22T02:00:00+08:00</published><updated>2020-05-22T02:00:00+08:00</updated><author><name>50833105</name></author><id>tag:None,2020-05-22:.\2020-wcmj-w9-summary.html</id><summary type="html">&lt;p&gt;電腦軟硬體簡介
網路架構與設定的簡介&lt;/p&gt;
</summary><content type="html">&lt;p&gt;電腦軟硬體簡介
網路架構與設定的簡介&lt;/p&gt;


&lt;h2&gt;電腦軟硬體簡介&lt;/h2&gt;
&lt;p&gt;硬體：可觸摸到的，例如:鍵盤、滑鼠&lt;/p&gt;
&lt;p&gt;主機:包含主機板、記憶體、顯示卡、插孔等等&lt;/p&gt;
&lt;p&gt;軟體：不可觸摸到的，例如:office系統&lt;/p&gt;
&lt;p&gt;作業系統；Windows(記事本、接龍、踩地雷)&lt;/p&gt;
&lt;p&gt;應用軟體、商用軟體、共享軟體(免費，但有限時或功能限制)、綠色軟體(免費免安裝的軟體)&lt;/p&gt;
&lt;h2&gt;網路架構與設定的簡介&lt;/h2&gt;
&lt;p&gt;網際網路:每台電腦都有IP位置(編號)。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;         實體建置:集線器或網路交換器。&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;網路設定:由設定&amp;gt;乙太網路或WIFI&amp;gt;網路和共用中心&amp;gt;內容&amp;gt;調整IPv4之IP及DNS&lt;/p&gt;
&lt;p&gt;設定Proxy(視情況所需，如果在IPv6下要使用IPv4，即可使用Proxy)&lt;/p&gt;</content><category term="W9"></category><category term="2020WCMJW9"></category></entry><entry><title>2020 WCMJ W11 課程簡介</title><link href=".%5C2020-wcmj-w11-summary.html" rel="alternate"></link><published>2018-09-10T11:00:00+08:00</published><updated>2018-09-10T11:00:00+08:00</updated><author><name>50833105</name></author><id>tag:None,2018-09-10:.\2020-wcmj-w11-summary.html</id><summary type="html">&lt;p&gt;說明如還利用&lt;a href="https://leoeditor.com/"&gt;Leo Editor&lt;/a&gt;管理&lt;a href="https://github.com/50833105/cmsimde.git"&gt;CMSiMDE&lt;/a&gt;網際網路內容管理系統中&lt;a href="https://github.com/getpelican/pelican"&gt;Pelican&lt;/a&gt;網誌。其中有共用、近端與遠端等三個設定檔案的修改，以及兩個用程式按鈕轉檔的使用。&lt;/p&gt;
</summary><content type="html">&lt;p&gt;說明如還利用&lt;a href="https://leoeditor.com/"&gt;Leo Editor&lt;/a&gt;管理&lt;a href="https://github.com/50833105/cmsimde.git"&gt;CMSiMDE&lt;/a&gt;網際網路內容管理系統中&lt;a href="https://github.com/getpelican/pelican"&gt;Pelican&lt;/a&gt;網誌。其中有共用、近端與遠端等三個設定檔案的修改，以及兩個用程式按鈕轉檔的使用。&lt;/p&gt;


&lt;h2&gt;Leo Editor 基本用法&lt;/h2&gt;
&lt;p&gt;首先在隨身程式系統的命令列中，以leo啟動&lt;a href="https://leoeditor.com/"&gt;Leo Editor&lt;/a&gt;，然後開啟&lt;a href="https://github.com/50833105/wcmj2020.git"&gt;wcmj2020&lt;/a&gt;倉儲config目錄中的pelican.leo檔案。&lt;/p&gt;
&lt;p&gt;由於 Leo Editor 是一個大綱管理系統, 淡黃色區域是大綱節點區, 淡紅色區是與各大綱對應的內文區, 而淡藍色則是 Log 輸出區&lt;/p&gt;
&lt;p&gt;新增節點的指令: ctrl + i, 表示要 insert 一個新的節點&lt;/p&gt;
&lt;p&gt;向右移動節點的方法: ctrl + r, 表示要將節點往 right (右) 移動&lt;/p&gt;
&lt;p&gt;向左移動節點的方法: ctrl + l, 表示要將節點往 left (左) 移動&lt;/p&gt;
&lt;p&gt;向上移動節點的方法: ctrl + u, 表示要將節點往 up (上) 移動&lt;/p&gt;
&lt;p&gt;向下移動節點的方法: ctrl + d, 表示要將節點往 down (下) 移動&lt;/p&gt;
&lt;h2&gt;三個檔案設定的修改&lt;/h2&gt;
&lt;p&gt;在共用檔案中，修改AUTHOR = '使用者名稱或學號'以及SITENAME = '自己想使用的名稱'&lt;/p&gt;
&lt;p&gt;在遠端檔案中，修改SITEURL = 'https://學號.github.io/wcmj2020/blog'&lt;/p&gt;
&lt;p&gt;近端檔案目前不用修改&lt;/p&gt;</content><category term="W11"></category><category term="2020WCMJW11"></category></entry></feed>